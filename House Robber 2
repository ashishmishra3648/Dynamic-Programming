
int rob1(int* nums, int numsSize) {
    if(numsSize == 0) return 0;
    if(numsSize == 1) return nums[0];

    int prev1=0;
    int prev2=0;
    for(int i=0;i<numsSize;i++){ 
        int pick = nums[i]+prev2;
       
        int notPick =  prev1;
        int current = fmax(pick, notPick);
        prev2 = prev1;
        prev1 = current;
    }
    return prev1;
    
}
int rob(int* nums, int n) {
    if(n == 0) return 0;
    if(n == 1) return nums[0];
    int temp1[n-1];
    int temp2[n-1];
    for(int i=1;i<n;i++){
        temp1[i-1]=nums[i];
    }
    for(int i=0;i<n-1;i++){
        temp2[i]=nums[i];
    }

    return fmax(rob1(temp1, n-1), rob1(temp2, n-1));
    
}
